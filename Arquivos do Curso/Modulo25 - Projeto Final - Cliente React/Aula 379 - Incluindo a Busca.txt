1 - Crie o component Note rodando:

mkdir src/components/notes/search
touch src/components/notes/search/index.js

2 - Inclua no service note:

search: (query) => Api.get(`/notes/search?query=${query}`, {
  headers: {'x-access-token': localStorage.getItem('token')}
}),

3 - Inclua no component Note:

a - O import do Search:

import Search from '../notes/search';

b - A função para buscar as notas:

const searchNotes = async (query) => {
  const response = await NoteService.search(query);
  setNotes(response.data)
}

c - A chamada do Search (dentro do Menu como primeiro elemento):

<Search searchNotes={searchNotes} fetchNotes={fetchNotes} />

4 - Coloque no component Search:

import React, { Fragment, useState, useEffect } from 'react';
import { Input, Column } from "rbx";
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faTimes } from '@fortawesome/free-solid-svg-icons'

function Search(props) {
  const [query, setQuery] = useState("")

  const handleKeyDown = (e) => {
    if (e.key === 'Enter') {
      props.searchNotes(query)
    }
  }

  return (
    <Column.Group className="is-vcentered" breakpoint="mobile">
      <Column size="9" offset={1}>
        <Input type="text"
          name={query}
          value={query}
          placeholder="Search note..."
          onChange={(e) => setQuery(e.target.value)}
          onKeyDown={handleKeyDown} />
      </Column>
    </Column.Group>
  )
}

export default Search;

5 - Ainda no Search, inclua o icone para limpar a busca (depois da column do input):

<Column mobile={2} size={1}>
  <a href="#" onClick={() => {
    props.fetchNotes()
    setQuery('')
  }}>
    <FontAwesomeIcon
      icon={faTimes}
      color="grey"
      className="is-pulled-left  "
    />
  </a>
</Column>